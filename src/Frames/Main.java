/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import custom.resources.Resource;
import custom.resources.Resources;
import custom.resources.Template;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import static nomabip.ScheduleBIP.GenerateReport;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;
import org.simpleframework.xml.Serializer;
import org.simpleframework.xml.core.Persister;
import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.SftpException;
import static custom.resources.Tools.decodePasswd;
import static custom.resources.Tools.infoBox;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;


  class xmlFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".xml");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Text documents (*.xml)";
        }
    } 

 class rtfFilter extends javax.swing.filechooser.FileFilter {
        @Override
        public boolean accept(File file) {
            // Allow only directories, or files with ".txt" extension
            return file.isDirectory() || file.getAbsolutePath().endsWith(".rtf");
        }
        @Override
        public String getDescription() {
            // This description will be displayed in the dialog,
            // hard-coded = ugly, should be done via I18N
            return "Text documents (*.rtf)";
        }
    } 


/**
 *
 * @author fblettner
 */
public class Main extends javax.swing.JFrame {

    private String paramFile;
    private String paramConfig;
    private final static String TEMPLATE = "%TEMPLATE%";
    private final static String FILE_NAME = "%FILE_NAME%";
    private final static String APP_HOME = "%APP_HOME%";
    private final static String PROCESS_HOME = "%PROCESS_HOME%";
    private static String pAppHome;
    private static String pProcessHome;
   
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
    }

       private String replaceConstValue (String inputStr) {
        String replaceStr = inputStr.replace(APP_HOME,pAppHome);
        replaceStr = replaceStr.replace(PROCESS_HOME,pProcessHome);
        replaceStr = replaceStr.replace(TEMPLATE,cbTemplate.getSelectedItem().toString());
        replaceStr = replaceStr.replace(FILE_NAME,paramFile);
        return replaceStr;
    }
 
       private String replaceScpConstValue (String inputStr) {
       String replaceStr = inputStr.replace(TEMPLATE,"");
        return replaceStr;
    }
       
    public void MainInit(String pConfig) throws Exception{
        
            paramConfig = pConfig;
            Serializer serializer = new Persister();
            Template templates = serializer.read(Template.class, new File(paramConfig));
            

    
            List<Resource> test = templates.getAllTemplates();
            for (int i = 0; i < test.size(); i++) {
                cbTemplate.addItem(test.get(i).getName());
             }
            cbTemplate.setSelectedIndex(0);
            
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fInputFile = new javax.swing.JFileChooser();
        fInputSubTmpl = new javax.swing.JFileChooser();
        bSettings = new javax.swing.JButton();
        bExit = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bInputFile = new javax.swing.JButton();
        txFileName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbMode = new javax.swing.JComboBox<>();
        bGenerateReport = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tReport = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tVersion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tLanguage = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tJobNumber = new javax.swing.JTextField();
        bGetFile = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbTemplate = new JComboBox() {
            @Override public void addItem(Object anObject) {
                int size = ((DefaultComboBoxModel) dataModel).getSize();
                Object obj;
                boolean added = false;
                for (int i=0; i<size; i++) {
                    obj = dataModel.getElementAt(i);
                    int compare = anObject.toString().compareToIgnoreCase(obj.toString());
                    if (compare <= 0) { // if anObject less than or equal obj
                        super.insertItemAt(anObject, i);
                        added = true;
                        break;
                    }
                }

                if (!added) {
                    super.addItem(anObject);
                }}}
                ;
                label1 = new java.awt.Label();
                jPanel5 = new javax.swing.JPanel();

                fInputFile.setFileFilter(new xmlFilter());

                fInputSubTmpl.setFileFilter(new rtfFilter());

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                bSettings.setText("Settings");
                bSettings.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        bSettingsActionPerformed(evt);
                    }
                });

                bExit.setText("Exit");
                bExit.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        bExitActionPerformed(evt);
                    }
                });

                jLabel1.setText("Input File");

                bInputFile.setText("Select File");
                bInputFile.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        bInputFileActionPerformed(evt);
                    }
                });

                txFileName.setEditable(false);
                txFileName.setToolTipText("");

                jLabel2.setText("Mode");
                jLabel2.setToolTipText("");

                cbMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SINGLE", "BURST" }));

                bGenerateReport.setText("Generate Report");
                bGenerateReport.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        bGenerateReportActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bGenerateReport, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bInputFile)
                            .addComponent(txFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                );
                jPanel1Layout.setVerticalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bInputFile)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bGenerateReport)
                        .addContainerGap(216, Short.MAX_VALUE))
                );

                jTabbedPane1.addTab("Execute", jPanel1);

                jLabel3.setText("Version");

                jLabel4.setText("Language");

                tLanguage.setText("FR");
                tLanguage.setToolTipText("");

                jLabel5.setText("Job Number");

                bGetFile.setText("Get File");
                bGetFile.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        bGetFileActionPerformed(evt);
                    }
                });

                jLabel6.setText("Report");

                javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
                jPanel2.setLayout(jPanel2Layout);
                jPanel2Layout.setHorizontalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(205, 205, 205)
                                .addComponent(bGetFile))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tVersion, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tLanguage)
                                    .addComponent(tReport)
                                    .addComponent(tJobNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(269, Short.MAX_VALUE))
                );
                jPanel2Layout.setVerticalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tReport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tJobNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(bGetFile)
                        .addContainerGap(151, Short.MAX_VALUE))
                );

                jTabbedPane1.addTab("Get XML", jPanel2);

                cbTemplate.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        cbTemplateActionPerformed(evt);
                    }
                });

                label1.setText("Template");

                javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
                jPanel5.setLayout(jPanel5Layout);
                jPanel5Layout.setHorizontalGroup(
                    jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGap(0, 80, Short.MAX_VALUE)
                );
                jPanel5Layout.setVerticalGroup(
                    jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGap(0, 79, Short.MAX_VALUE)
                );

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(bExit, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbTemplate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bSettings, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(144, 144, 144))
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(bExit))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(bSettings)))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbTemplate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(21, Short.MAX_VALUE))
                );

                pack();
            }// </editor-fold>//GEN-END:initComponents

    private void bExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bExitActionPerformed

    private void bSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSettingsActionPerformed
        ManageConfig ManageConfig = new ManageConfig();
        ManageConfig.setVisible(true);
    }//GEN-LAST:event_bSettingsActionPerformed

    private void cbTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTemplateActionPerformed
    }//GEN-LAST:event_cbTemplateActionPerformed

    private void bGetFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGetFileActionPerformed
        try {
            getFile();
        } catch (Exception ex) {
            Logger.getLogger(GetXML.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bGetFileActionPerformed

    private void bGenerateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerateReportActionPerformed
        try {
            File file = new File(paramConfig);
            Serializer serializer = new Persister();
            Resources resources = serializer.read(Resources.class, file);

            Resource resource = resources.getResourceByName("global");
            pAppHome = resource.getProperty("appHome");
            pProcessHome = resource.getProperty("processHome");
            String pDirInput = replaceConstValue(resource.getProperty("dirInput"));
            String InputFile = pDirInput + paramFile + ".xml";

            FileUtils.copyFile(new File(txFileName.getText()), new File(InputFile));

            GenerateReport(cbTemplate.getSelectedItem().toString(),paramFile,cbMode.getSelectedItem().toString(),"1",paramConfig);

            infoBox("Report generated successfully", "INFORMATION");

        } catch (IOException ex) {
            infoBox("Report cannot be rendered", "INFORMATION");
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            infoBox("Report cannot be rendered", "INFORMATION");
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bGenerateReportActionPerformed

    private void bInputFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInputFileActionPerformed
        fInputFile.setCurrentDirectory(new File(System.getProperty("user.dir")));
        int returnVal = fInputFile.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File fileInput = fInputFile.getSelectedFile();

            txFileName.setText(fileInput.getAbsolutePath());
            paramFile = FilenameUtils.getBaseName(fileInput.getName());

        }
    }//GEN-LAST:event_bInputFileActionPerformed

    
        public void getFile() throws Exception {
        JSch jsch = new JSch();
        Session session = null;
        try {
            File file = new File(paramConfig);
            Serializer serializer = new Persister();
            Resources resources = serializer.read(Resources.class, file);
 
            Resource resource = resources.getResourceByName("global");
            String pScpDir = resource.getProperty("scpDir");
            String pScpUser = resource.getProperty("scpUser");
            String pScpServer = resource.getProperty("scpServer");
            String pScpPasswd = decodePasswd(resource.getProperty("scpPassword"));
            String pDirInput = replaceScpConstValue(resource.getProperty("dirInput"));
            String InputFile = tReport.getText()+"_"+tVersion.getText()+"_"+tLanguage.getText()+"_"+tJobNumber.getText()+ ".xml";

            
            session = jsch.getSession(pScpUser, pScpServer, 22);
            session.setConfig("StrictHostKeyChecking", "no");
            session.setPassword(pScpPasswd);
            session.connect();

            Channel channel = session.openChannel("sftp");
            channel.connect();
            ChannelSftp sftpChannel = (ChannelSftp) channel;
            sftpChannel.get(pScpDir + InputFile, pDirInput+InputFile);
            sftpChannel.exit();
            session.disconnect();
           infoBox("File downloaded successfully", "INFORMATION");
        } catch (JSchException e) {
            infoBox("File couldn't be downloaded", "INFORMATION");
             e.printStackTrace();  
        } catch (SftpException e) {
             infoBox("File couldn't be downloaded", "INFORMATION");
            e.printStackTrace();
        }
    }
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bExit;
    private javax.swing.JButton bGenerateReport;
    private javax.swing.JButton bGetFile;
    private javax.swing.JButton bInputFile;
    private javax.swing.JButton bSettings;
    private javax.swing.JComboBox<String> cbMode;
    private javax.swing.JComboBox<String> cbTemplate;
    private javax.swing.JFileChooser fInputFile;
    private javax.swing.JFileChooser fInputSubTmpl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.Label label1;
    private javax.swing.JTextField tJobNumber;
    private javax.swing.JTextField tLanguage;
    private javax.swing.JTextField tReport;
    private javax.swing.JTextField tVersion;
    private javax.swing.JTextField txFileName;
    // End of variables declaration//GEN-END:variables
}
